name: Build Maps Notification Reader

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Get date for cache key
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y%m%d")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            buildozer-global-${{ hashFiles('buildozer.spec') }}-
            buildozer-global-

      # Clean specific build directories manually
      - name: Clean build directories
        run: |
          echo "Cleaning build directories..."
          rm -rf .buildozer/android/platform/build
          rm -rf .buildozer/android/app
          rm -rf bin/
          ls -la .buildozer/ || echo "No .buildozer directory yet"

      - name: Cache Buildozer local directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: buildozer-local-${{ runner.os }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}-v2
          restore-keys: |
            buildozer-local-${{ runner.os }}-${{ steps.get-date.outputs.date }}-
            buildozer-local-${{ runner.os }}-

      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          command: buildozer android release
          buildozer_version: stable

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: maps-notification-reader-apk
          path: ${{ steps.buildozer.outputs.filename }}
          retention-days: 30

      - name: Show APK info
        run: |
          echo "APK built successfully!"
          echo "Filename: ${{ steps.buildozer.outputs.filename }}"
          if [ -f "${{ steps.buildozer.outputs.filename }}" ]; then
            echo "Size: $(du -h "${{ steps.buildozer.outputs.filename }}" | cut -f1)"
          fi